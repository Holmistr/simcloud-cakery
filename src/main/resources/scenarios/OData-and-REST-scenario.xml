<?xml version="1.0" encoding="utf-8"?>
<scenario xmlns="urn:perfcake:scenario:1.0">

    <generator class="DefaultMessageGenerator" threads="${threads}">
        <run type="${runType}" value="${duration}" />
        <property name="threadQueueSize" value="${threadQueueSize}"/>
    </generator>

    <sender class="IspnCakeryODataAndRestSender">
        <property name="target" value="It's not used here, pass -Duri and Custom Senders will take care."/>
        <property name="expectedResponseCodes" value="200,201,202,204"/>
    </sender>

    <reporting>
        <!-- measuring subsets of response time results -->
        <!--<reporter class="WindowResponseTimeReporter">-->
            <!--<property name="windowSize" value="20"/>-->
            <!--<destination class="ConsoleDestination">-->
                <!--<period type="time" value="2000"/>-->
            <!--</destination>-->
        <!--</reporter>-->

        <!--<reporter class="WarmUpReporter" enabled="true">-->
            <!--&lt;!&ndash;<property name="minimalWarmUpCount" value="1000"/>&ndash;&gt;-->
            <!--<property name="minimalWarmUpDuration" value="15000"/>-->
            <!--<property name="relativeThreshold" value="0.10"/> &lt;!&ndash; 0.005 = 0.5% &ndash;&gt;-->
            <!--&lt;!&ndash;<property name="absoluteThreshold" value="1.5"/> &lt;!&ndash; milliseconds? &ndash;&gt;&ndash;&gt;-->

            <!--<destination class="ConsoleDestination">-->
                <!--<period type="time" value="1000"/>-->
            <!--</destination>-->

            <!--&lt;!&ndash;<destination class="CSVDestination">&ndash;&gt;-->
                <!--&lt;!&ndash;<period type="time" value="1000"/>&ndash;&gt;-->
                <!--&lt;!&ndash;<property name="path" value="/home/tsykora/programs/odata_playing/Infinispan-cakery/warmup.csv"/>&ndash;&gt;-->
            <!--&lt;!&ndash;</destination>&ndash;&gt;-->
        <!--</reporter>-->

        <reporter class="ResponseTimeReporter">
            <destination class="ConsoleDestination">
                <period type="time" value="1000"/>
            </destination>
            <destination class="CSVDestination">
                <period type="time" value="1000"/>
                <property name="path" value="response-time.csv"/>
            </destination>
        </reporter>

        <reporter class="AverageThroughputReporter">
            <destination class="ConsoleDestination">
                <period type="time" value="1000"/>
            </destination>
            <destination class="CSVDestination">
                <period type="time" value="1000"/>
                <property name="path" value="throughput.csv"/>
            </destination>
        </reporter>

        <reporter class="MemoryUsageReporter">
            <property name="agentHostname" value="${perfcake.agent.host}"/>
            <property name="agentPort" value="8850"/>
            <destination class="ConsoleDestination">
                <period type="time" value="2000"/>
            </destination>
            <destination class="CSVDestination">
                <period type="time" value="2000"/>
                <property name="path" value="memusage.csv"/>
            </destination>
        </reporter>

    </reporting>
    <!--<messages>-->
        <!--<message>-->
            <!--&lt;!&ndash;<header name="Authorization" value="Basic Z3Vlc3Q6Z3Vlc3Q=" />&ndash;&gt;-->
            <!--<header name="Accept" value="application/json, application/xml"/>-->
        <!--</message>-->
    <!--</messages>-->



</scenario>

